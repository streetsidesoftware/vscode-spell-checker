name: " ðŸ§ª Integration Tests"
on:
  pull_request:
    paths-ignore:
      - "docs/**"
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"

jobs:
  run-integration-tests:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node-version:
          - ${{ vars.DEFAULT_NODE_VERSION }}
        vscode-version: [stable]
        include:
          - os: ubuntu-latest
            node-version: ${{ vars.DEFAULT_NODE_VERSION }}
            vscode-version: package.json
          - os: ubuntu-latest
            node-version: ${{ vars.DEFAULT_NODE_VERSION }}
            vscode-version: insiders

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install and Build
        run: |
          npm i
          npm run build

      - name: Run Linux
        if: runner.os == 'Linux'
        env:
          VSCODE_VERSION: ${{ matrix.vscode-version }}
        run: xvfb-run -a npm run test-client-integration

      - name: Run Windows and MacOS
        if: runner.os != 'Linux'
        env:
          VSCODE_VERSION: ${{ matrix.vscode-version }}
        run: npm run test-client-integration

  run-integration-tests-vsix:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node-version:
          - ${{ vars.DEFAULT_NODE_VERSION }}
        vscode-version: [stable]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install
        run: |
          npm i

      - name: Build .vsix file
        run: npm run test-vsce-build

      - name: Build files for testing
        run: npm run build

      - name: Run Linux
        if: runner.os == 'Linux'
        env:
          VSCODE_VERSION: ${{ matrix.vscode-version }}
          VSIX_LOCATION: ./temp/code-spell-checker.vsix
        run: xvfb-run -a npm run test-client-integration

      - name: Run Windows and MacOS
        if: runner.os != 'Linux'
        env:
          VSCODE_VERSION: ${{ matrix.vscode-version }}
          VSIX_LOCATION: ./temp/code-spell-checker.vsix
        run: npm run test-client-integration
# cspell:ignore xvfb
