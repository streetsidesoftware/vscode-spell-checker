"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[795],{8769:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=i(4848),l=i(8453);const r={title:"Spell Checker",nav_order:1,description:"Spelling Checker for Visual Studio Code",permalink:"/"},t="Spelling Checker for Visual Studio Code",o={type:"mdx",permalink:"/vscode-spell-checker/docsV2/",source:"@site/src/pages/index.md",title:"Spell Checker",description:"Spelling Checker for Visual Studio Code",frontMatter:{title:"Spell Checker",nav_order:1,description:"Spelling Checker for Visual Studio Code",permalink:"/"},unlisted:!1},c={},d=[{value:"Support Further Development",id:"support-further-development",level:2},{value:"Functionality",id:"functionality",level:2},{value:"Example",id:"example",level:3},{value:"Suggestions",id:"suggestions",level:2},{value:"Install",id:"install",level:2},{value:"Supported Languages",id:"supported-languages",level:2},{value:"Add-On Dictionaries",id:"add-on-dictionaries",level:2},{value:"Language Dictionaries",id:"language-dictionaries",level:3},{value:"Technical Dictionaries",id:"technical-dictionaries",level:3},{value:"Enabled File Types",id:"enabled-file-types",level:2},{value:"Enable / Disable File Types",id:"enable--disable-file-types",level:3},{value:"How it works with camelCase",id:"how-it-works-with-camelcase",level:2},{value:"Special case with ALL CAPS words",id:"special-case-with-all-caps-words",level:3},{value:"Things to note",id:"things-to-note",level:2},{value:"In Document Settings",id:"in-document-settings",level:2},{value:"Enable / Disable checking sections of code",id:"enable--disable-checking-sections-of-code",level:3},{value:"Disable Checking",id:"disable-checking",level:4},{value:"Enable Checking",id:"enable-checking",level:4},{value:"JavaScript Example",id:"javascript-example",level:4},{value:"Markdown Example",id:"markdown-example",level:4},{value:"Ignore",id:"ignore",level:3},{value:"Words",id:"words",level:3},{value:"Enable / Disable compound words",id:"enable--disable-compound-words",level:3},{value:"Excluding and Including Text to be checked.",id:"excluding-and-including-text-to-be-checked",level:3},{value:"Exclude Example",id:"exclude-example",level:4},{value:"Include Example",id:"include-example",level:4},{value:"Predefined RegExp expressions",id:"predefined-regexp-expressions",level:2},{value:"Exclude patterns",id:"exclude-patterns",level:3},{value:"Include Patterns",id:"include-patterns",level:3},{value:"Customization",id:"customization",level:2},{value:"Adding words to the Workspace Dictionary",id:"adding-words-to-the-workspace-dictionary",level:3},{value:"cspell.json",id:"cspelljson",level:3},{value:"Example <em>cspell.json</em> file",id:"example-cspelljson-file",level:4},{value:"VS Code Configuration Settings",id:"vs-code-configuration-settings",level:3},{value:"Dictionaries",id:"dictionaries",level:2},{value:"General Dictionaries",id:"general-dictionaries",level:3},{value:"Programming Language Dictionaries",id:"programming-language-dictionaries",level:3},{value:"Miscellaneous Dictionaries",id:"miscellaneous-dictionaries",level:3},{value:"How to add your own Dictionaries",id:"how-to-add-your-own-dictionaries",level:3},{value:"<code>cSpell.customDictionaries</code>",id:"cspellcustomdictionaries",level:4},{value:"Global Dictionary",id:"global-dictionary",level:4},{value:"Define the Dictionary",id:"define-the-dictionary",level:5},{value:"Project / Workspace Dictionary using <code>cspell.json</code>",id:"project--workspace-dictionary-using-cspelljson",level:4},{value:"Project / Workspace Dictionary using VS Code Settings",id:"project--workspace-dictionary-using-vs-code-settings",level:4},{value:"FAQ",id:"faq",level:2}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"spelling-checker-for-visual-studio-code",children:"Spelling Checker for Visual Studio Code"}),"\n",(0,s.jsx)(n.p,{children:"A basic spell checker that works well with code and documents."}),"\n",(0,s.jsx)(n.p,{children:"The goal of this spell checker is to help catch common spelling errors while keeping the number of false positives low."}),"\n",(0,s.jsx)(n.h2,{id:"support-further-development",children:"Support Further Development"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/sponsors/streetsidesoftware",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/-black?style=social&logo=githubsponsors&label=GitHub%20Sponsor%3A%20Street%20Side%20Software",alt:"GitHub Sponsors"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://patreon.com/streetsidesoftware",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/-black?style=social&logo=patreon&label=Patreon%3A%20Street%20Side%20Software",alt:"Patreon"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/-black?style=social&logo=paypal&label=PayPal%20Donate%3A%20Street%20Side%20Software",alt:"PayPal"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://opencollective.com/code-spell-checker",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/-black?style=social&logo=opencollective&label=Open%20Collective%3A%20Code%20Spell%20Checker",alt:"Open Collective"})})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"functionality",children:"Functionality"}),"\n",(0,s.jsx)(n.p,{children:"Load a TypeScript, JavaScript, Text, etc. file. Words not in the dictionary files will have\na squiggly underline."}),"\n",(0,s.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/example.gif",alt:"Example"})}),"\n",(0,s.jsx)(n.h2,{id:"suggestions",children:"Suggestions"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/suggestions.gif",alt:"Example"})}),"\n",(0,s.jsx)(n.p,{children:"To see the list of suggestions:"}),"\n",(0,s.jsx)(n.p,{children:"After positioning the cursor in the word, any of the following should display the list of suggestions:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Click on the \ud83d\udca1 (lightbulb) in the left hand margin."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://code.visualstudio.com/docs/getstarted/keybindings#_rich-languages-editing",children:(0,s.jsx)(n.code,{children:"Quick Fix"})})," Editor action command:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Mac: ",(0,s.jsx)(n.code,{children:"\u2318"}),"+",(0,s.jsx)(n.code,{children:"."})," or ",(0,s.jsx)(n.code,{children:"Cmd"}),"+",(0,s.jsx)(n.code,{children:"."})]}),"\n",(0,s.jsxs)(n.li,{children:["PC: ",(0,s.jsx)(n.code,{children:"Ctrl"}),"+",(0,s.jsx)(n.code,{children:"."})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"install",children:"Install"}),"\n",(0,s.jsxs)(n.p,{children:["Open up VS Code and hit ",(0,s.jsx)(n.code,{children:"F1"})," and type ",(0,s.jsx)(n.code,{children:"ext"})," select install and type ",(0,s.jsx)(n.code,{children:"code-spell-checker"})," hit enter and reload window to enable."]}),"\n",(0,s.jsx)(n.h2,{id:"supported-languages",children:"Supported Languages"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"English (US)"}),"\n",(0,s.jsxs)(n.li,{children:["English (GB) - turn on by changing ",(0,s.jsx)(n.code,{children:'"cSpell.language": "en"'})," to ",(0,s.jsx)(n.code,{children:'"cSpell.language": "en-GB"'})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"add-on-dictionaries",children:"Add-On Dictionaries"}),"\n",(0,s.jsx)(n.h3,{id:"language-dictionaries",children:"Language Dictionaries"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-ancient-greek",children:"Ancient Greek"})," - Ancient Greek dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-arabic",children:"Arabic"})," - Arabic dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-australian-english",children:"Australian English"})," - Australian English dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-austrian-german",children:"Austrian German"})," - Austrian German dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-basque",children:"Basque"})," - Basque dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-british-english",children:"British English"})," - British English dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-bulgarian",children:"Bulgarian"})," - Bulgarian dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-canadian-english",children:"Canadian English"})," - Canadian English dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-catalan",children:"Catalan"})," - Catalan dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-croatian",children:"Croatian"})," - Croatian dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-czech",children:"Czech"})," - Czech dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-danish",children:"Danish"})," - Danish dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-dutch",children:"Dutch"})," - Dutch / Nederlands dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-esperanto",children:"Esperanto"})," - Esperanto dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-estonian",children:"Estonian"})," - Estonian dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-finnish",children:"Finnish"})," - Finnish dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-french",children:"French"})," - French dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-french-reforme",children:"French R\xe9forme 90"})," - French R\xe9forme 90 dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-german",children:"German"})," - German dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-greek",children:"Greek"})," - Greek dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-hebrew",children:"Hebrew"})," - Hebrew dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-hungarian",children:"Hungarian"})," - Hungarian dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-indonesian",children:"Indonesian"})," - Indonesian dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-italian",children:"Italian"})," - Italian dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-latin",children:"Latin"})," - Latin dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-latvian",children:"Latvian"})," - Latvian dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-lithuanian",children:"Lithuanian"})," - Lithuanian dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-norwegian-bokmal",children:"Norwegian Bokm\xe5l"})," - Norwegian Bokm\xe5l dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-persian",children:"Persian"})," - Persian dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-polish",children:"Polish"})," - Polish dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-portuguese",children:"Portuguese"})," - Portuguese dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-portuguese-brazilian",children:"Brazilian Portuguese"})," - Brazilian Portuguese dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-romanian",children:"Romanian"})," - Romanian dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-russian",children:"Russian"})," - Russian dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-serbian",children:"Serbian"})," - Serbian dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-slovak",children:"Slovak"})," - Slovak dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-slovenian",children:"Slovenian"})," - Slovenian dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-spanish",children:"Spanish"})," - Spanish Add-On for Code Spell Checker"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-swedish",children:"Swedish"})," - Swedish dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-swiss-german",children:"Swiss German"})," - Swiss German dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-turkish",children:"Turkish"})," - Turkish dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-ukrainian",children:"Ukrainian"})," - Ukrainian dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-vietnamese",children:"Vietnamese"})," - Vietnamese dictionary extension for VS Code."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"technical-dictionaries",children:"Technical Dictionaries"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-medical-terms",children:"Medical Terms"})," - Medical Terms Add-On for Code Spell Checker"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-scientific-terms",children:"Scientific Terms"})," - Scientific Terms dictionary extension for VS Code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-win32",children:"Win32"})," - Win32 dictionary extension for VS Code."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"enabled-file-types",children:"Enabled File Types"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"AsciiDoc"}),"\n",(0,s.jsx)(n.li,{children:"C, C++"}),"\n",(0,s.jsx)(n.li,{children:"C#"}),"\n",(0,s.jsx)(n.li,{children:"css, less, scss"}),"\n",(0,s.jsx)(n.li,{children:"Dart"}),"\n",(0,s.jsx)(n.li,{children:"Elixir"}),"\n",(0,s.jsx)(n.li,{children:"Go"}),"\n",(0,s.jsx)(n.li,{children:"Html"}),"\n",(0,s.jsx)(n.li,{children:"Java"}),"\n",(0,s.jsx)(n.li,{children:"JavaScript"}),"\n",(0,s.jsx)(n.li,{children:"JSON / JSONC"}),"\n",(0,s.jsx)(n.li,{children:"LaTeX"}),"\n",(0,s.jsx)(n.li,{children:"Markdown"}),"\n",(0,s.jsx)(n.li,{children:"PHP"}),"\n",(0,s.jsx)(n.li,{children:"PowerShell"}),"\n",(0,s.jsx)(n.li,{children:"Pug / Jade"}),"\n",(0,s.jsx)(n.li,{children:"Python"}),"\n",(0,s.jsx)(n.li,{children:"reStructuredText"}),"\n",(0,s.jsx)(n.li,{children:"Ruby"}),"\n",(0,s.jsx)(n.li,{children:"Rust"}),"\n",(0,s.jsx)(n.li,{children:"Scala"}),"\n",(0,s.jsx)(n.li,{children:"Text"}),"\n",(0,s.jsx)(n.li,{children:"TypeScript"}),"\n",(0,s.jsx)(n.li,{children:"YAML"}),"\n",(0,s.jsx)(n.li,{children:"SQL"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"enable--disable-file-types",children:"Enable / Disable File Types"}),"\n",(0,s.jsxs)(n.p,{children:["To ",(0,s.jsx)(n.em,{children:"Enable"})," or ",(0,s.jsx)(n.em,{children:"Disable"})," spell checking for a file type:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Click on the Spell Checker status in the status bar:"}),"\n"]}),"\n",(0,s.jsx)("img",{width:"57",alt:"Spell Checker Status Bar",src:"https://user-images.githubusercontent.com/3740137/177296936-54d5a88c-a596-4178-bd91-0be06161e1fc.png"}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"On the Info screen, click the checkbox."}),"\n"]}),"\n",(0,s.jsx)("img",{width:"710",alt:"Spell Checker Information Window",src:"https://user-images.githubusercontent.com/3740137/177297717-88da81d8-9a8c-4907-9424-66e013899318.png"}),"\n",(0,s.jsx)(n.h2,{id:"how-it-works-with-camelcase",children:"How it works with camelCase"}),"\n",(0,s.jsx)(n.p,{children:"The concept is simple, split camelCase words before checking them against a list of known English words."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"camelCase -> camel case"}),"\n",(0,s.jsxs)(n.li,{children:["HTMLInput -> html input -- Notice that the ",(0,s.jsx)(n.code,{children:"I"})," is associated with ",(0,s.jsx)(n.code,{children:"Input"})," and not ",(0,s.jsx)(n.code,{children:"HTML"})]}),"\n",(0,s.jsx)(n.li,{children:"snake_case_words -> snake case words"}),"\n",(0,s.jsx)(n.li,{children:"camel2snake -> camel snake -- (the 2 is ignored)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"special-case-with-all-caps-words",children:"Special case with ALL CAPS words"}),"\n",(0,s.jsx)(n.p,{children:"There are a few special cases to help with common spelling practices for ALL CAPS words."}),"\n",(0,s.jsxs)(n.p,{children:["Trailing ",(0,s.jsx)(n.code,{children:"s"}),", ",(0,s.jsx)(n.code,{children:"ing"}),", ",(0,s.jsx)(n.code,{children:"ies"}),", ",(0,s.jsx)(n.code,{children:"es"}),", ",(0,s.jsx)(n.code,{children:"ed"})," are kept with the previous word."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["CURLs -> curls -- trailing ",(0,s.jsx)(n.code,{children:"s"})]}),"\n",(0,s.jsxs)(n.li,{children:["CURLedRequest -> curled request -- trailing ",(0,s.jsx)(n.code,{children:"ed"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"things-to-note",children:"Things to note"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"This spellchecker is case insensitive. It will not catch errors like english which should be English."}),"\n",(0,s.jsx)(n.li,{children:"The spellchecker uses a local word dictionary. It does not send anything outside your machine."}),"\n",(0,s.jsx)(n.li,{children:"The words in the dictionary can and do contain errors."}),"\n",(0,s.jsx)(n.li,{children:"There are missing words."}),"\n",(0,s.jsx)(n.li,{children:'Only words longer than 3 characters are checked. "jsj" is not checked, while "jsja" is checked and will be marked as incorrect because it does not exist in any of the dictionaries.'}),"\n",(0,s.jsx)(n.li,{children:"All symbols and punctuation are ignored."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"in-document-settings",children:"In Document Settings"}),"\n",(0,s.jsx)(n.p,{children:"It is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project."}),"\n",(0,s.jsxs)(n.p,{children:["All settings are prefixed with ",(0,s.jsx)(n.code,{children:"cSpell:"})," or ",(0,s.jsx)(n.code,{children:"spell-checker:"}),"."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"disable"})," -- turn off the spell checker for a section of code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"enable"})," -- turn the spell checker back on after it has been turned off."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ignore"})," -- specify a list of words to be ignored."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"words"})," -- specify a list of words to be considered correct and will appear in the suggestions list."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"locale"})," -- set locale (example: ",(0,s.jsx)(n.code,{children:"cSpell:locale fr,en"})," to use French and English languages)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ignoreRegExp"})," -- Any text matching the regular expression will NOT be checked for spelling."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"includeRegExp"})," -- Only text matching the collection of includeRegExp will be checked."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"enableCompoundWords"})," / ",(0,s.jsx)(n.code,{children:"disableCompoundWords"}),' -- Allow / disallow words like: "stringlength".']}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"enable--disable-checking-sections-of-code",children:"Enable / Disable checking sections of code"}),"\n",(0,s.jsx)(n.p,{children:"It is possible to disable / enable the spell checker by adding comments to your code."}),"\n",(0,s.jsx)(n.h4,{id:"disable-checking",children:"Disable Checking"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"cSpell:disable"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"spell-checker: disable"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"spellchecker: disable"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"cspell: disable-line"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"cspell: disable-next-line"})}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"enable-checking",children:"Enable Checking"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"cSpell:enable"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"spell-checker: enable"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"spellchecker: enable"})}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"javascript-example",children:"JavaScript Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\n// Nest disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n"})}),"\n",(0,s.jsx)(n.h4,{id:"markdown-example",children:"Markdown Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-markdown",children:"\x3c!--- cSpell:disable ---\x3e\n\nThis text is not checked.\n\n\x3c!--- cSpell:enable ---\x3e\n\nThis text is checked.\n"})}),"\n",(0,s.jsx)(n.h3,{id:"ignore",children:"Ignore"}),"\n",(0,s.jsx)(n.p,{children:"Ignore allows you the specify a list of words you want to ignore within the document."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," words defined with ",(0,s.jsx)(n.code,{children:"ignore"})," will be ignored for the entire file."]}),"\n",(0,s.jsx)(n.h3,{id:"words",children:"Words"}),"\n",(0,s.jsx)(n.p,{children:"The words list allows you to add words that will be considered correct and will be used as suggestions."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," words defined with ",(0,s.jsx)(n.code,{children:"words"})," will be used for the entire file."]}),"\n",(0,s.jsx)(n.h3,{id:"enable--disable-compound-words",children:"Enable / Disable compound words"}),"\n",(0,s.jsx)(n.p,{children:"In some programming language it is common to glue words together."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file."]}),"\n",(0,s.jsx)(n.h3,{id:"excluding-and-including-text-to-be-checked",children:"Excluding and Including Text to be checked."}),"\n",(0,s.jsxs)(n.p,{children:["By default, the entire document is checked for spelling.\n",(0,s.jsx)(n.code,{children:"cSpell:disable"}),"/",(0,s.jsx)(n.code,{children:"cSpell:enable"})," above allows you to block off sections of the document.\n",(0,s.jsx)(n.code,{children:"ignoreRegExp"})," and ",(0,s.jsx)(n.code,{children:"includeRegExp"})," give you the ability to ignore or include patterns of text.\nBy default the flags ",(0,s.jsx)(n.code,{children:"gim"})," are added if no flags are given."]}),"\n",(0,s.jsx)(n.p,{children:"The spell checker works in the following way:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Find all text matching ",(0,s.jsx)(n.code,{children:"includeRegExp"})]}),"\n",(0,s.jsxs)(n.li,{children:["Remove any text matching ",(0,s.jsx)(n.code,{children:"excludeRegExp"})]}),"\n",(0,s.jsx)(n.li,{children:"Check the remaining text."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"exclude-example",children:"Exclude Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop."]}),"\n",(0,s.jsx)(n.h4,{id:"include-example",children:"Include Example"}),"\n",(0,s.jsxs)(n.p,{children:["In general you should not need to use ",(0,s.jsx)(n.code,{children:"includeRegExp"}),". But if you are mixing languages then it could come in helpful."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Python",children:'# cSpell:includeRegExp #.*\n# cSpell:includeRegExp /(["]{3}|[\']{3})[^\\1]*?\\1/g\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    """This is checked for spelling"""\n    variabele = 0\n    alinea = \'this is not checked\'\n    for num in seq:\n        # The local state of \'value\' will be retained between iterations\n        variabele += num\n        yield variabele\n'})}),"\n",(0,s.jsx)(n.h2,{id:"predefined-regexp-expressions",children:"Predefined RegExp expressions"}),"\n",(0,s.jsx)(n.h3,{id:"exclude-patterns",children:"Exclude patterns"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Urls"}),(0,s.jsx)("sup",{children:"1"})," -- Matches urls"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"HexValues"})," -- Matches common hex format like ",(0,s.jsx)(n.code,{children:"#aaa"}),", ",(0,s.jsx)(n.code,{children:"0xfeef"}),", ",(0,s.jsx)(n.code,{children:"\\u0134"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"EscapeCharacters"}),(0,s.jsx)("sup",{children:"1"})," -- matches special characters: ",(0,s.jsx)(n.code,{children:"\\n"}),", ",(0,s.jsx)(n.code,{children:"\\t"})," etc."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Base64"}),(0,s.jsx)("sup",{children:"1"})," -- matches base64 blocks of text longer than 40 characters."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Email"})," -- matches most email addresses."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"include-patterns",children:"Include Patterns"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Everything"}),(0,s.jsx)("sup",{children:"1"})," -- By default we match an entire document and remove the excludes."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"string"})," -- This matches common string formats like '...', \"...\", and `...`"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"CStyleComment"})," -- These are C Style comments /* */ and //"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"PhpHereDoc"})," -- This matches PHPHereDoc strings."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)("sup",{children:"1."})," These patterns are part of the default include/exclude list for every file."]}),"\n",(0,s.jsx)(n.h2,{id:"customization",children:"Customization"}),"\n",(0,s.jsxs)(n.p,{children:["The spell checker configuration can be controlled via VS Code preferences or ",(0,s.jsx)(n.code,{children:"cspell.json"})," configuration file."]}),"\n",(0,s.jsx)(n.p,{children:"Order of precedence:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Workspace Folder ",(0,s.jsx)(n.code,{children:"cspell.json"})]}),"\n",(0,s.jsxs)(n.li,{children:["Workspace Folder ",(0,s.jsx)(n.code,{children:".vscode/cspell.json"})]}),"\n",(0,s.jsxs)(n.li,{children:["VS Code Preferences ",(0,s.jsx)(n.code,{children:"cSpell"})," section."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"adding-words-to-the-workspace-dictionary",children:"Adding words to the Workspace Dictionary"}),"\n",(0,s.jsxs)(n.p,{children:["You have the option to add you own words to the workspace dictionary. The easiest, is to put your cursor\non the word you wish to add, when you lightbulb shows up, hit ",(0,s.jsx)(n.code,{children:"Ctrl+."})," (windows) / ",(0,s.jsx)(n.code,{children:"Cmd+."})," (Mac). You will get a list\nof suggestions and the option to add the word."]}),"\n",(0,s.jsxs)(n.p,{children:["You can also type in a word you want to add to the dictionary: ",(0,s.jsx)(n.code,{children:"F1"})," ",(0,s.jsx)(n.code,{children:"add word"})," -- select ",(0,s.jsx)(n.code,{children:"Add Word to Dictionary"})," and type in the word you wish to add."]}),"\n",(0,s.jsx)(n.h3,{id:"cspelljson",children:"cspell.json"}),"\n",(0,s.jsxs)(n.p,{children:["Words added to the dictionary are placed in the ",(0,s.jsx)(n.code,{children:"cspell.json"})," file in the ",(0,s.jsx)(n.em,{children:"workspace"})," folder.\nNote, the settings in ",(0,s.jsx)(n.code,{children:"cspell.json"})," will override the equivalent cSpell settings in VS Code's ",(0,s.jsx)(n.code,{children:"settings.json"}),"."]}),"\n",(0,s.jsxs)(n.h4,{id:"example-cspelljson-file",children:["Example ",(0,s.jsx)(n.em,{children:"cspell.json"})," file"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    "version": "0.2",\n    // language - current active spelling language\n    "language": "en",\n    // words - list of words to be always considered correct\n    "words": [\n        "mkdirp",\n        "tsmerge",\n        "githubusercontent",\n        "streetsidesoftware",\n        "vsmarketplacebadge",\n        "visualstudio"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example "hte" should be "the"\n    "flagWords": [\n        "hte"\n    ]\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"vs-code-configuration-settings",children:"VS Code Configuration Settings"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'    //-------- Code Spell Checker Configuration --------\n    // The Language locale to use when spell checking. "en", "en-US" and "en-GB" are currently supported by default.\n    "cSpell.language": "en",\n\n    // Controls the maximum number of spelling errors per document.\n    "cSpell.maxNumberOfProblems": 100,\n\n    // Controls the number of suggestions shown.\n    "cSpell.numSuggestions": 8,\n\n    // The minimum length of a word before checking it against a dictionary.\n    "cSpell.minWordLength": 4,\n\n    // Specify file types to spell check.\n    "cSpell.enabledLanguageIds": [\n        "csharp",\n        "go",\n        "javascript",\n        "javascriptreact",\n        "markdown",\n        "php",\n        "plaintext",\n        "typescript",\n        "typescriptreact",\n        "yml",\n        "sql"\n    ],\n\n    // Enable / Disable the spell checker.\n    "cSpell.enabled": true,\n\n    // Display the spell checker status on the status bar.\n    "cSpell.showStatus": true,\n\n    // Words to add to dictionary for a workspace.\n    "cSpell.words": [],\n\n    // Enable / Disable compound words like \'errormessage\'\n    "cSpell.allowCompoundWords": false,\n\n    // Words to be ignored and not suggested.\n    "cSpell.ignoreWords": ["behaviour"],\n\n    // User words to add to dictionary.  Should only be in the user settings.\n    "cSpell.userWords": [],\n\n    // Specify paths/files to ignore.\n    "cSpell.ignorePaths": [\n        "node_modules",        // this will ignore anything the node_modules directory\n        "**/node_modules",     // the same for this one\n        "**/node_modules/**",  // the same for this one\n        "node_modules/**",     // Doesn\'t currently work due to how the current working directory is determined.\n        "vscode-extension",    //\n        ".git",                // Ignore the .git directory\n        "*.dll",               // Ignore all .dll files.\n        "**/*.dll"             // Ignore all .dll files\n    ],\n\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example "hte" should be "the"`\n    "cSpell.flagWords": ["hte"],\n\n    // Set the delay before spell checking the document. Default is 50.\n    "cSpell.spellCheckDelayMs": 50,\n\n    // Set Diagnostic Reporting Level\n    //   Error - Report Spelling Issues as Errors\n    //   Warning - Report Spelling Issues as Warnings\n    //   Information - Report Spelling Issues as Information (default)\n    //   Hint - Report Spelling Issues as Hints, will not show up in Problems\n    "cSpell.diagnosticLevel": "Information",\n'})}),"\n",(0,s.jsx)(n.h2,{id:"dictionaries",children:"Dictionaries"}),"\n",(0,s.jsx)(n.p,{children:"The spell checker includes a set of default dictionaries."}),"\n",(0,s.jsx)(n.h3,{id:"general-dictionaries",children:"General Dictionaries"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"wordsEn"})," - Derived from Hunspell US English words."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"wordsEnGb"})," - Derived from Hunspell GB English words."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"companies"})," - List of well known companies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"softwareTerms"}),' - Software Terms and concepts like "coroutine", "debounce", "tree", etc.']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"misc"})," - Terms that do not belong in the other dictionaries."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"programming-language-dictionaries",children:"Programming Language Dictionaries"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"typescript"})," - keywords for Typescript and Javascript"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"node"})," - terms related to using nodejs."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"php"})," - ",(0,s.jsx)(n.em,{children:"php"})," keywords and library methods"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"go"})," - ",(0,s.jsx)(n.em,{children:"go"})," keywords and library methods"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"python"})," - ",(0,s.jsx)(n.em,{children:"python"})," keywords"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"powershell"})," - ",(0,s.jsx)(n.em,{children:"powershell"})," keywords"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"html"})," - ",(0,s.jsx)(n.em,{children:"html"})," related keywords"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"css"})," - ",(0,s.jsx)(n.em,{children:"css"}),", ",(0,s.jsx)(n.em,{children:"less"}),", and ",(0,s.jsx)(n.em,{children:"scss"})," related keywords"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"miscellaneous-dictionaries",children:"Miscellaneous Dictionaries"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"fonts"})," - long list of fonts - to assist with ",(0,s.jsx)(n.em,{children:"css"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Based upon the programming language, different dictionaries will be loaded."}),"\n",(0,s.jsx)(n.p,{children:"Here are some of the default rules:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:'"*"'})," matches any programming language / file type."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:'"locale"'})," is used to filter based upon the ",(0,s.jsx)(n.code,{children:'"cSpell.language"'})," setting."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'{\n"cSpell.languageSettings": [\n  { "languageId": \'*\',      "locale": \'en\',    "dictionaries": [\'wordsEn\'] },\n  { "languageId": \'*\',      "locale": \'en-US\', "dictionaries": [\'wordsEn\'] },\n  { "languageId": \'*\',      "locale": \'en-GB\', "dictionaries": [\'wordsEnGb\'] },\n  { "languageId": \'*\',                         "dictionaries": [\'companies\', \'softwareTerms\', \'misc\'] },\n  { "languageId": "python",                    "dictionaries": ["python"]},\n  { "languageId": "go",                        "dictionaries": ["go"] },\n  { "languageId": "javascript",                "dictionaries": ["typescript", "node"] },\n  { "languageId": "javascriptreact",           "dictionaries": ["typescript", "node"] },\n  { "languageId": "typescript",                "dictionaries": ["typescript", "node"] },\n  { "languageId": "typescriptreact",           "dictionaries": ["typescript", "node"] },\n  { "languageId": "html",                      "dictionaries": ["html", "fonts", "typescript", "css"] },\n  { "languageId": "php",                       "dictionaries": ["php", "html", "fonts", "css", "typescript"] },\n  { "languageId": "css",                       "dictionaries": ["fonts", "css"] },\n  { "languageId": "less",                      "dictionaries": ["fonts", "css"] },\n  { "languageId": "scss",                      "dictionaries": ["fonts", "css"] },\n];\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"how-to-add-your-own-dictionaries",children:"How to add your own Dictionaries"}),"\n",(0,s.jsx)(n.h4,{id:"cspellcustomdictionaries",children:(0,s.jsx)(n.code,{children:"cSpell.customDictionaries"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface Settings {\n    'cSpell.customDictionaries': {\n        [name: string]: CustomDictionary;\n    };\n}\n\ninterface CustomDictionary {\n    /**\n     * @title Name of Dictionary\n     * The reference name of the dictionary.\n     *\n     *\n     * Example: `My Words` or `custom`\n     *\n     *\n     * If they name matches a pre-defined dictionary, it will override the pre-defined dictionary.\n     * If you use: `typescript` it will replace the built-in TypeScript dictionary.\n     */\n    name?: DictionaryId;\n\n    /**\n     * @title Description of the Dictionary\n     * Optional: A human readable description.\n     */\n    description?: string;\n\n    /**\n     * @title Path to Dictionary Text File\n     * Define the path to the dictionary text file.\n     *\n     *\n     * **Note:** if path is `undefined` the `name`d dictionary is expected to be found\n     * in the `dictionaryDefinitions`.\n     *\n     *\n     * File Format: Each line in the file is considered a dictionary entry.\n     * Case is preserved while leading and trailing space is removed.\n     * The path should be absolute, or relative to the workspace.\n     *\n     * **Example:** relative to User's folder\n     *\n     * ```\n     * ~/dictionaries/custom_dictionary.txt\n     * ```\n     *\n     * **Example:** relative to the `client` folder in a multi-root workspace\n     *\n     * ```\n     * ${workspaceFolder:client}/build/custom_dictionary.txt\n     * ```\n     *\n     * **Example:** relative to the current workspace folder in a single-root workspace\n     *\n     * **Note:** this might no as expected in a multi-root workspace since it is based upon the relative\n     * workspace for the currently open file.\n     *\n     * ```\n     * ${workspaceFolder}/build/custom_dictionary.txt\n     * ```\n     *\n     * **Example:** relative to the workspace folder in a single-root workspace or the first folder in\n     * a multi-root workspace\n     *\n     * ```\n     * ./build/custom_dictionary.txt\n     * ```\n     */\n    path?: FsPath;\n\n    /**\n     * @title Add Words to Dictionary\n     * Indicate if this custom dictionary should be used to store added words.\n     * @default true\n     */\n    addWords?: boolean;\n\n    /**\n     * @title Scope of dictionary\n     * Options are\n     * - `user` - words that apply to all projects and workspaces\n     * - `workspace` - words that apply to the entire workspace\n     * - `folder` - words that apply to only a workspace folder\n     */\n    scope?: CustomDictionaryScope | CustomDictionaryScope[];\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"global-dictionary",children:"Global Dictionary"}),"\n",(0,s.jsx)(n.p,{children:"To add a global dictionary, you will need change your user settings."}),"\n",(0,s.jsx)(n.h5,{id:"define-the-dictionary",children:"Define the Dictionary"}),"\n",(0,s.jsx)(n.p,{children:"In your user settings, you will need to tell the spell checker where to find your word list."}),"\n",(0,s.jsxs)(n.p,{children:["Example adding medical terms, so words like ",(0,s.jsx)(n.em,{children:"acanthopterygious"})," can be found."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"VS Code Settings"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'"cSpell.customDictionaries": {\n  "myWords": {\n    "name": "myWords",\n    "path": "~/my-words.txt",\n    "scope": "user",\n    "addWords": true\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Explained:"})," In this example, we have told the spell checker where to find our personal dictionary called ",(0,s.jsx)(n.code,{children:"myWords"}),"."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"})," - this is the name of the dictionary, all references to this dictionary is done by the name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"path"})," - this the path to the dictionary file. Since it is in the user settings, we have to use absolute paths or paths relative to the user directory by using ",(0,s.jsx)(n.code,{children:"~/"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"scope"}),' - (Optional) this is used to "scope" a dictionary to ',(0,s.jsx)(n.code,{children:"user"}),", ",(0,s.jsx)(n.code,{children:"workspace"}),", or ",(0,s.jsx)(n.code,{children:"folder"}),". Scope is used to help communicate the intended use of the dictionary."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"addWords"})," - (Optional) default - ",(0,s.jsx)(n.code,{children:"true"})," - is used to show / hide the dictionary as a possible target for adding words."]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"project--workspace-dictionary-using-cspelljson",children:["Project / Workspace Dictionary using ",(0,s.jsx)(n.code,{children:"cspell.json"})]}),"\n",(0,s.jsxs)(n.p,{children:["To add a dictionary at the project level should be defined in a ",(0,s.jsx)(n.code,{children:"cspell.json"})," file so it can be used with the ",(0,s.jsx)(n.code,{children:"cspell"})," command line tool.\nThis file can be either at the project root or in the .vscode directory."]}),"\n",(0,s.jsx)(n.p,{children:"Example adding medical terms, where the terms are checked into the project and we only want to use it for .md files."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'{\n    "dictionaryDefinitions": [\n        { "name": "medicalTerms", "path": "./dictionaries/medicalterms-en.txt"},\n        { "name": "cities", "path": "./dictionaries/cities.txt"}\n    ],\n    "dictionaries": [\n        "cities"\n    ],\n    "languageSettings": [\n        { "languageId": "markdown", "dictionaries": ["medicalTerms"] },\n        { "languageId": "plaintext", "dictionaries": ["medicalTerms"] }\n    ]\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Explained:"})," In this example, two dictionaries were defined: ",(0,s.jsx)(n.em,{children:"cities"})," and ",(0,s.jsx)(n.em,{children:"medicalTerms"}),".\nThe paths are relative to the location of the ",(0,s.jsx)(n.em,{children:"cSpell.json"})," file. This allows for dictionaries to be checked into the project."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"cities"})," dictionary is used for every file type, because it was added to the list to ",(0,s.jsx)(n.em,{children:"dictionaries"}),".\nThe ",(0,s.jsx)(n.em,{children:"medicalTerms"})," dictionary is only used when editing ",(0,s.jsx)(n.em,{children:"markdown"})," or ",(0,s.jsx)(n.em,{children:"plaintext"})," files."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"DictionaryDefinition"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface DictionaryDefinition {\n    /**\n     * This is the name of a dictionary.\n     *\n     * Name Format:\n     * - Must contain at least 1 number or letter.\n     * - Spaces are allowed.\n     * - Leading and trailing space will be removed.\n     * - Names ARE case-sensitive.\n     * - Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.\n     */\n    name: DictionaryId;\n    /** Optional description. */\n    description?: string;\n    /** Path to custom dictionary text file. */\n    path: CustomDictionaryPath;\n    /**\n     * Defines the scope for when words will be added to the dictionary.\n     * Scope values: `user`, `workspace`, `folder`.\n     */\n    scope?: CustomDictionaryScope | CustomDictionaryScope[];\n    /**\n     * When `true`, let's the spell checker know that words can be added to this dictionary.\n     */\n    addWords: boolean;\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"project--workspace-dictionary-using-vs-code-settings",children:"Project / Workspace Dictionary using VS Code Settings"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"VS Code Settings"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'"cSpell.customDictionaries": {\n  "project-words": {\n    "name": "project-words",\n    "path": "${workspaceRoot}/project-words.txt",\n    "description": "Words used in this project",\n    "addWords": true\n  },\n  "medicalTerms": {\n    "name": "medicalTerms",\n    "path": "/Users/guest/projects/cSpell-WordLists/dictionaries/medicalterms-en.txt",\n    "addWords": false // Do not add words to this dictionary\n  },\n  "companyTerms": {\n    "name": "companyTerms",\n    "path": "${workspaceFolder}/../company/terms.txt"\n    // "addWords": true -- is implied\n  },\n  "custom": true, // Enable the `custom` dictionary\n  "internal-terms": false // Disable the `internal-terms` dictionary\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,s.jsxs)(n.p,{children:["See: ",(0,s.jsx)(n.a,{href:"https://github.com/streetsidesoftware/vscode-spell-checker/blob/main/FAQ.md",children:"FAQ"})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)("p",{align:"center",children:["Brought to you by ",(0,s.jsxs)("a",{href:"https://streetsidesoftware.com",title:"Street Side Software",children:[(0,s.jsx)("img",{width:"16",alt:"Street Side Software Logo",src:"https://i.imgur.com/CyduuVY.png"})," Street Side Software"]})]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(6540);const l={},r=s.createContext(l);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);